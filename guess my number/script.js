'use strict';

// console.log(document.querySelector('.message').textContent); //first DOM manipulation

//Lecture 1

//What's the DOM and DOM manipulation

//DOM: Document object model
//Change HTML And CSS through JS

//Note: Document is the entry point to the DOM

//DOM !== JS

//WebAPI- Application Programming Interface, are like libraries that browsers implement that we can access from JS code

//Lecture 2 - Selecting and Manipulating elementd
/*
document.querySelector('.message').textContent = 'üéâ Correct Number!';

console.log(document.querySelector('.message').textContent);

document.querySelector('.number').textContent = 13;
document.querySelector('.score').textContent = 10;

document.querySelector('.guess').value = 23;
console.log(document.querySelector('.guess').value);
*/

//Lecture 3- Handling Click Events

// document.querySelector('.check').addEventListener('click', function () {
//   const guess = Number(document.querySelector('.guess').value);
//   console.log(guess);

//   if (!guess) {
//     document.querySelector('.message').textContent = '‚õî No number!';
//   }
// });

//L4- Implementing the Game logic

let secretNumber = Math.trunc(Math.random() * 20) + 1;
let score = 20;
let highscore = 0;

const displayMessage = function (message) {
  document.querySelector('.message').textContent = message;
};

document.querySelector('.check').addEventListener('click', function () {
  const guess = Number(document.querySelector('.guess').value);
  console.log(guess);

  //When there is no input
  if (!guess) {
    displayMessage('‚õî No number!');

    //When player wins
  } else if (guess === secretNumber) {
    displayMessage('üéâ Correct Number!');
    document.querySelector('.number').textContent = secretNumber;

    document.querySelector('body').style.backgroundColor = '#60b347';

    document.querySelector('.number').style.width = '30rem'; //adds as an inline property, that is not changing the CSS file

    if (score > highscore) {
      highscore = score;
      document.querySelector('.highscore').textContent = highscore;
    }

    //when guess is wrong
  } else if (guess !== secretNumber) {
    if (score > 1) {
      displayMessage(guess > secretNumber ? 'üìà Too high!' : 'üìâ Too low!');
      score--;
      document.querySelector('.score').textContent = score;
    } else {
      displayMessage('üí• You lost the game!');
      document.querySelector('.score').textContent = 0;
    }
  }
  //   //When guess is too high
  // } else if (guess > secretNumber) {
  //   if (score > 1) {
  //     document.querySelector('.message').textContent = 'üìà Too high!';
  //     score--;
  //     document.querySelector('.score').textContent = score;
  //   } else {
  //     document.querySelector('.message').textContent = 'üí• You lost the game!';
  //     document.querySelector('.score').textContent = 0;
  //   }
  // }

  // //When guess is too low
  // else if (guess < secretNumber) {
  //   if (score > 1) {
  //     document.querySelector('.message').textContent = 'üìâ Too low!';
  //     score--;
  //     document.querySelector('.score').textContent = score;
  //   } else {
  //     document.querySelector('.message').textContent = 'üí• You lost the game!';
  //     document.querySelector('.score').textContent = 0;
  //   }
  // }
});

//Coding Challenge 1

/*
Implement a game rest functionality, so that the player can make a new guess!
Your tasks:
1. Select the element with the 'again' class and attach a click event handler
2. In the handler function, restore initial values of the 'score' and
'secretNumber' variables
3. Restore the initial conditions of the message, number, score and guess input
fields
4. Also restore the original background color (#222) and number width (15rem)
GOOD LUCK ÔøΩ

*/

document.querySelector('.again').addEventListener('click', function () {
  score = 20;
  secretNumber = Math.trunc(Math.random() * 20) + 1;
  displayMessage('Start guessing...');
  document.querySelector('.score').textContent = score;
  document.querySelector('.number').textContent = '?';
  const guess = (document.querySelector('.guess').value = '');
  document.querySelector('body').style.backgroundColor = '#222';

  document.querySelector('.number').style.width = '15rem';
});

//Implementing HighScore --ABOVE

//Lecture 5: Refactoring the Code: DRY principle
//Rest refactor by yourself -- stats : [‚ùå]
